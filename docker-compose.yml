version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: aidev-postgres
    environment:
      POSTGRES_USER: aidev
      POSTGRES_PASSWORD: aidev_secret_2025
      POSTGRES_DB: aidev_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aidev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aidev-network

  redis:
    image: redis:7-alpine
    container_name: aidev-redis
    command: redis-server --requirepass redis_secret_2025 --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aidev-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: aidev-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_secret_2025
      HTTP_USER: admin
      HTTP_PASSWORD: admin_2025
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - aidev-network
    profiles:
      - debug

  adminer:
    image: adminer:latest
    container_name: aidev-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgres
    networks:
      - aidev-network
    profiles:
      - debug

  mailhog:
    image: mailhog/mailhog:latest
    container_name: aidev-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - aidev-network
    profiles:
      - development

  user-container-base:
    build:
      context: ./docker/user-container
      dockerfile: Dockerfile
    image: aidev/user-container:latest
    container_name: aidev-user-container-base
    command: echo "Base image built successfully"
    profiles:
      - build

  prometheus:
    image: prom/prometheus:latest
    container_name: aidev-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - aidev-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: aidev-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafana_2025
      GF_INSTALL_PLUGINS: redis-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - aidev-network
    profiles:
      - monitoring

networks:
  aidev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: